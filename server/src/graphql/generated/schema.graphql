### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AdminUser {
  admin_user_id: Int!
  created_at: String
  email: String!
  full_name: String!
  password: String!
  status: Boolean!
  updated_at: String
  uuid: String!
}

type Collection {
  code: String!
  collection_id: Int!
  created_at: String
  description: String
  name: String!
  updated_at: String
  uuid: String!
}

type Customer {
  created_at: String
  customer_address: [CustomerAddress]
  customer_group: CustomerGroup
  customer_id: Int!
  email: String!
  full_name: String
  group_id: Int
  password: String!
  status: Int!
  updated_at: String
  uuid: String!
}

type CustomerAddress {
  address_1: String
  address_2: String
  city: String
  country: String!
  created_at: String
  customer: AdminUser
  customer_address_id: Int!
  customer_id: Int!
  full_name: String
  is_default: Int
  postcode: String
  province: String
  telephone: String
  updated_at: String
  uuid: String!
}

type CustomerGroup {
  created_at: String
  customer: [CustomerGroup]
  customer_group_id: Int!
  group_name: String!
  updated_at: String
  uuid: String!
}

type Mutation {
  createCustomer(email: String!, fullName: String!, password: String!): Customer!
  registerCustomer(email: String!, fullName: String!, password: String!): Customer
  updateCustomer(customerId: Int!, email: String!, fullName: String!, password: String!): Customer!
}

type Query {
  getAdminById(id: Int!): AdminUser!
  getCustomerByIdOrEmail(customerId: Int, email: String): Customer!
  listAdminUsers: [AdminUser!]!
  listCollections: [Collection!]!
  listCustomerAddresses: [CustomerAddress]
  listCustomerGroups: [CustomerGroup]!
  listCustomers: [Customer]!
  verifyCustomer(email: String!, password: String!): Customer
}